name: Build and Deploy SSO Dashboard

on:
  workflow_dispatch:
  push:
    branches:
      - 'revamp'

env:
  APP: sso-dashboard
  GAR_LOCATION: us-east1
  PROJECT_ID: iam-auth0
  REGION: us-east1
  CHANNEL_IDS: G01AC4VU4UV

jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'
    env:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN}}
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v3'

      - name: 'Google auth'
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' 

      - name: 'Docker auth'
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: 'Create release name'
        run: |-
          echo "RELEASE_NAME=${{ env.APP }}-${GITHUB_SHA::7}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}" >> ${GITHUB_ENV}

      - name: Send initial slack notification
        uses: slackapi/slack-github-action@v1.24.0
        id: slack
        with:
          channel-id: ${{ env.CHANNEL_IDS }}
          payload-file-path: ".github/workflows/payload-slack-content.json"
        env:
          STATUS_COLOR: dbab09
          STATUS_TITLE: Building Docker Image
          STATUS_VALUE: ':link-run: *Running*'

      - name: 'Build and push container'
        run: |-
          docker build \
            -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP }}/${{ env.APP }}:${{ github.sha }}" .
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP }}/${{ env.APP }}:${{ github.sha }}"

      - name: Update slack build in progress
        if: success()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          update-ts: ${{ steps.slack.outputs.ts }}
          channel-id: ${{ env.CHANNEL_IDS }}
          payload-file-path: ".github/workflows/payload-slack-content.json"
        env:
          STATUS_COLOR: dbab09
          STATUS_TITLE: Sending to Cloud Deploy
          STATUS_VALUE: ':link-run: *Running*'

      - name: 'Render cloud deploy config manifests from templates'
        run: for template in $(ls clouddeploy/*.template.yaml); do envsubst < ${template} > ${template%%.*}.yaml ; done

      - name: 'Create Cloud Deploy release'
        uses: 'google-github-actions/create-cloud-deploy-release@v0'
        with:
          delivery_pipeline: '${{ env.APP }}'
          name: '${{ env.RELEASE_NAME }}'
          region: '${{ env.REGION }}'
          description: '${{ env.GITHUB_COMMIT_MSG }}'
          skaffold_file: 'clouddeploy/skaffold.yaml'
          images: 'app=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP }}/${{ env.APP }}:${{ github.sha }}'

      - name: Update slack deployment complete
        if: success()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          update-ts: ${{ steps.slack.outputs.ts }}
          channel-id: ${{ env.CHANNEL_IDS }}
          payload-file-path: ".github/workflows/payload-slack-content.json"
        env:
          STATUS_COLOR: 28a745
          STATUS_TITLE: Building and Deploy
          STATUS_VALUE: ':link-zelda: *Completed*'

      - name: Update slack deployment failed
        if: failure()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          update-ts: ${{ steps.slack.outputs.ts }}
          channel-id: ${{ env.CHANNEL_IDS }}
          payload-file-path: ".github/workflows/payload-slack-content.json"
        env:
          STATUS_COLOR: d81313
          STATUS_TITLE: Building and Deploy
          STATUS_VALUE: ':skull_and_crossbones: *Failed*'

